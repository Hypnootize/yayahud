//yacrosshair

event DamagedPlayer
{
    Animate Crosshair 	FgColor 	"CrosshairDamage" 	Linear 0.0 0.00001
	Animate Crosshair 	FgColor 	"Crosshair" 	Linear 0.10 0.10001
}

//===========================================

//Fog's Crosshair

event DamagedPlayer
{
	Animate fogCrosshair 	FgColor 	"CrosshairDamage" 	Linear 0.0 0.00001
	Animate fogCrosshair 	FgColor 	"Crosshair" 	Linear 0.10 0.10001
	
	// Set the second line ("255 255 255 255") to whatever color you have changed
	// your crosshair to be. So if you crosshair is green, the second line should
	// also have that same value.
	// "255 255 255 255"	= White
	// "255 255 0 255" 	= Yellow
	// "145 225 25 255"	= Green
	//
	//You can also look into the clientscheme.res file in /resource/,
	//there you can find various colors that are already defined for the HUD
	//such as "Green", "Red", "Gray" and so on
	//
	//
}

//===========================================

//Health Bonus Pulse
event HudHealthBonusPulse
{
	Animate	PlayerStatusHealthBonusImage 	Alpha		"205"		    Linear 0.0 0.2
	Animate	PlayerStatusHealthBonusImage 	Alpha		"0"		        Linear 0.2 0.4

    Animate	PlayerStatusHealthValue 	    FgColor		"Buff"	        Accel 0.0 0.0
	Animate	PlayerStatusHealthValueCam 	    FgColor		"Buff"	        Accel 0.0 0.0
    Animate	PlayerStatusHealthValueSpec 	FgColor		"Buff"	        Accel 0.0 0.0  
	Animate	PlayerStatusHealthValueTour  	FgColor		"Buff"          Accel 0.0 0.0

	Animate HealthBarBuff	Alpha	"255"		Accel 0.0 0.0
	Animate HealthBarBuff2	Alpha	"255"		Accel 0.0 0.0
	
	Animate HealthBarBuff 		Alpha	"0"			Accel 0.0 0.4
	Animate HealthBarBuff 		Alpha	"255"		Accel 0.2 0.2

	RunEvent HudHealthBonusPulseLoop	0.6
}

// call to loop HudHealthBonusPulse
event HudHealthBonusPulseLoop
{
	RunEvent HudHealthBonusPulse 0.0
	RunEvent PlayerStatusHealthValue 0.0
	RunEvent PlayerStatusHealthValueCam 0.0
	RunEvent PlayerStatusHealthValueSpec 0.0
	RunEvent PlayerStatusHealthValueTour 0.0
}

event HudHealthBonusPulseStop
{
	StopEvent HudHealthBonusPulse 0.0
	StopEvent HudHealthBonusPulseLoop 0.0
	StopEvent PlayerStatusHealthValue 0.0
	StopEvent PlayerStatusHealthValueCam 0.0
	StopEvent PlayerStatusHealthValueSpec 0.0
	StopEvent PlayerStatusHealthValueTour 0.0

	Animate	PlayerStatusHealthValue 	    FgColor		"Health"	        Accel 0.0 0.0
	Animate	PlayerStatusHealthValueCam 	    FgColor		"Health"	        Accel 0.0 0.0
    Animate	PlayerStatusHealthValueSpec 	FgColor		"Health"	        Accel 0.0 0.0
	Animate	PlayerStatusHealthValueTour  	FgColor		"Health"            Accel 0.0 0.0

	Animate HealthBarBuff	Alpha	"0"		Accel 0.0 0.0
	Animate HealthBarBuff2	Alpha	"0"	Accel 0.0 0.0
    
}

//===========================================

//Health Dying Pulse
event HudHealthDyingPulse
{
	Animate	PlayerStatusHealthBonusImage 	Alpha		"175"		         Linear 0.0 0.075
	Animate	PlayerStatusHealthBonusImage 	Alpha		"0"		         Linear 0.125 0.075

    Animate	PlayerStatusHealthValue 	    FgColor		"Low"	        Accel 0.0 0.0
	Animate	PlayerStatusHealthValueCam 	    FgColor		"Low"	        Accel 0.0 0.0
    Animate	PlayerStatusHealthValueSpec 	FgColor		"Low"	        Accel 0.0 0.0  
	Animate	PlayerStatusHealthValueTour  	FgColor		"Low"          Accel 0.0 0.0

	Animate HealthBarHurt		Alpha	"255"		Accel 0.0 0.0
	Animate HealthBarHurt2	Alpha	"255"		Accel 0.0 0.0
	
	Animate HealthBarHurt		Alpha	"0"	Accel 0.0 0.4
	Animate HealthBarHurt		Alpha	"255"		Accel 0.2 0.2

	RunEvent HudHealthDyingPulseLoop	0.6
}

// call to loop HudHealthDyingPulse
event HudHealthDyingPulseLoop
{
	RunEvent HudHealthDyingPulse 0.0
	RunEvent PlayerStatusHealthValue 0.0
	RunEvent PlayerStatusHealthValueCam 0.0
	RunEvent PlayerStatusHealthValueSpec 0.0
	RunEvent PlayerStatusHealthValueTour 0.0
}

event HudHealthDyingPulseStop
{
	StopEvent HudHealthDyingPulse 0.0
	StopEvent HudHealthDyingPulseLoop 0.0
	StopEvent PlayerStatusHealthValue 0.0
	StopEvent PlayerStatusHealthValueCam 0.0
	StopEvent PlayerStatusHealthValueSpec 0.0
	StopEvent PlayerStatusHealthValueTour 0.0


	Animate	PlayerStatusHealthValue 	    FgColor		"Health"	         Accel 0.0 0.0
	Animate	PlayerStatusHealthValueCam 	    FgColor		"Health"	         Accel 0.0 0.0
    Animate	PlayerStatusHealthValueSpec 	FgColor		"Health"	         Accel 0.0 0.0
	Animate	PlayerStatusHealthValueTour  	FgColor		"Health"             Accel 0.0 0.0

	Animate HealthBarHurt		Alpha	"0"		Accel 0.0 0.0
	Animate HealthBarHurt2	Alpha	"0"		Accel 0.0 0.0	
    
}

//===========================================


event HudLowAmmoPulse {RunEvent LowAmmoPulse 0}
event LowAmmoPulse
{
	Animate	HudWeaponLowAmmoImage		Alpha		"255"		Linear 0.0 0.075
	Animate	HudWeaponLowAmmoImage		Alpha		"0"		Linear 0.125 0.075

    Animate	AmmoInClip		FgColor		"AmmoLow"	         Accel 0.0 0.0
	Animate	AmmoInReserve	FgColor		"AmmoLow"            Accel 0.0 0.0
	Animate	AmmoNoClip		FgColor		"AmmoLow"	         Accel 0.0 0.0
    
	Animate	AmmoBG 	                BgColor		"Blank"	        linear 0.0 0.0
	
	RunEvent HudLowAmmoPulseLoop	0.25
}

event HudLowAmmoPulseLoop
{
	RunEvent HudLowAmmoPulse 0.0
}

event HudLowAmmoPulseStop
{
	StopEvent LowAmmoPulse 0.0
	StopEvent HudLowAmmoPulseLoop 0.0

    Animate	AmmoInClip		FgColor		"Ammo"	         Accel 0.0 0.0
	Animate	AmmoInReserve	FgColor		"AmmoReserve"    Accel 0.0 0.0
	Animate	AmmoNoClip		FgColor		"Ammo"	         Accel 0.0 0.0
    
	Animate	AmmoBG 	                BgColor		"Blank"	        linear 0.0 0.0
}

//===========================================

// Flash the medic charge hud when we have full charge

event HudMedicCharged
{
	Animate	MedicBG 	            BgColor		"Uber"		linear 0.0 0.0
	Animate	ChargeMeter 	        FgColor		"UberMeter"		    linear 0.0 0.0

	RunEvent HudMedicChargedLoop	0.6
}

// call to loop HudHealthBonusPulse
event HudMedicChargedLoop
{
	RunEvent HudMedicCharged 0.0
	RunEvent ChargeLabel 0.0
	RunEvent ChargeMeter 0.0
}

event HudMedicChargedStop
{
	StopEvent HudMedicCharged 0.0
	StopEvent HudMedicChargedLoop 0.0
	StopEvent ChargeLabel 0.0
	StopEvent ChargeMeter 0.0

    Animate	MedicBG 	            BgColor		"Blank"	       linear 0.0 0.0
	Animate	ChargeLabel 	        FgColor		"White"		   linear 0.0 0.0001
	Animate	ChargeMeter 	        FgColor		"White"		   linear 0.0 0.0001
}

//===========================================

event FlagOutlineHide
{
	Animate OutlineImage	Alpha		"0"				Linear 0.0 0.1
}

// Local player flag pickup/drop
event FlagOutline
{
	RunEvent FlagOutlineHide 0.0
	Animate OutlineImage	Alpha		"150"			Linear 0.1 0.2
	
	Animate OutlineImage	Position	"c-80 300"		Linear 0.1 0.2
	Animate OutlineImage	Size		"160 100"		Linear 0.1 0.2

	Animate OutlineImage	Position	"c-40 388"		Linear 0.7 0.2
	Animate OutlineImage	Size		"80 50"		Linear 0.7 0.2
	
	Animate OutlineImage	Alpha		"0"				Linear 0.9 0.1
}

//===========================================

// Spy Disguise
event HudSpyDisguiseChanged
{
	Animate PlayerStatusSpyOutlineImage		Alpha		"255"			Linear 0.0 0.2
	
	Animate PlayerStatusSpyOutlineImage		Position	"c-200 c-200"	        Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage		Size		"400 400"		Linear 0.0 0.2

	RunEvent HudSpyDisguiseHide	0.7
}

event HudSpyDisguiseHide
{
	Animate PlayerStatusSpyOutlineImage		Position	"3 413"			Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage		Size		"55 55"			Linear 0.0 0.2
	
	Animate PlayerStatusSpyOutlineImage		Alpha		"0"			Linear 0.2 0.1
}

event HudSpyDisguiseFadeIn
{
	Animate PlayerStatusSpyImage			Alpha		"255"			Linear 0.9 0.1
	Animate PlayerStatusClassImage			Alpha		"255"			Linear 0.0 0.0	
}

event HudSpyDisguiseFadeOut
{
	Animate PlayerStatusSpyImage			Alpha		"0"			Linear 0.9 0.1	
	Animate PlayerStatusClassImage			Alpha		"0"			Linear 0.0 0.0
}

//===========================================

event HudTournamentSetupPanelOpen
{
	Animate HudTournamentSetup	Position	"c-90 -70"	Linear 0.0 0.001
	Animate HudTournamentSetup	Position	"c-90 47"	Spline 0.001 0.2
}

event HudTournamentSetupPanelClose
{
	Animate HudTournamentSetup	Position	"c-90 47"	Linear 0.0 0.001
	Animate HudTournamentSetup	Position	"c-90 -70"	Spline 0.001 0.2
}

//===========================================